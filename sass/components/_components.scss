// Logo
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

// search
.search {
    flex: 0 0 40%;

    display: flex;
    justify-content: center;
    align-items: center;
    
    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }

    }

    &__input {
        font-size: inherit;
        font-family: inherit;
        background-color: var(--color-grey-light-2);
        color: inherit;
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__input::-webkit-input-placeholder {
        font-size: inherit;
        color: var(--color-grey-light-4);
        font-weight: 100;
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); // fill keyword is used to fill color for svg icons
    }
}

// user navigation
.user-nav {
    align-self: stretch;

    display: flex;
    align-items: center; // we are overriding align-items: center property defined in header. which will result in increasing the height of user-nav icons 
    

    & > * { // used to select all the direct child emements of user-nav which are user-nav__icon-box, user-nav__icon-box and user-nav__user
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    } 

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__icon-box {
        display: flex;
        align-items: center;
        position: relative;

    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        color: #fff;
        background-color: var(--color-primary);
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

}

//side navigation
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium2) {
        display: flex;
        margin-top: 0;
    }

    &__item {
        position: relative;
        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium2) {
                margin-bottom: 0;
            }
        }

        @media only screen and (max-width: $bp-medium2) {
            flex-grow: 1;
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        transition: transform .2s, width .4s .2s, background-color .1s; // .2s at the end will make width transition wait for .2s mean while in that .2s transform transition can be seen by the user.
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        padding: 1.5rem 3rem;
        position: relative; // we should always define position when we use z-index
        z-index: 10;  // we want this link to obtain on top of item:before::hover 

        display: flex;
        align-items: center;

        @media only screen and (max-width: $bp-medium2) {
            justify-content: center;
            padding: 2rem;
        }
    }

    &__icon {
        height: 1.75rem;
        width: 1.75rem;
        fill: currentColor; // currentColor is the color of current e;lement or parent element
        margin-right: 2rem;
    }
}

// legal text
.legal {
    font-size: 1.2rem;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
    text-align: center;

    @media only screen and (max-width: $bp-medium2) {
        display: none;
    }
}

// gallery
.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block;
    }

}

// overview

.overview {
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--line);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        margin-right: auto; // this is used to push the stars to left side and location to right side and create empty space between them.
        display: flex;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;
        align-self: stretch; // we are over riding align-items: center defined on line 206 in this file in order to increse the height of this rating element

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3.5px;
    }

    &__rating-count {
        text-transform: uppercase;
        font-size: .8rem;
    }
}

// button inline
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor; // current color = --color-primary
    display: inline-block;
    background-color: transparent;
    padding-bottom: 2px;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }

    &:focus { // on click
        outline: none;
        animation: pulsate 1s infinite; // infinite keyword is used to get the animation effect continuosly on a single click
    }
}


@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0, .25); // 4rem = blurr, .25 = opacity
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

// Paragraphs
.paragraph:not(:last-of-type) { // except for last paragraph in a container, for resr all the paragraphs this property will be applied
    margin-bottom: 2rem;
}

// LIST
.list{
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;

    &__item {
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;


        // For older browsers which doesn't support mask property 
      //background-image: url(../img/chevron-thin-right.svg);
      //background-size: cover;

        // For new browsers
        background-color: var(--color-primary);
        -webkit-mask-image: url(../img/chevron-thin-right.svg);
        mask-image: url(../img/chevron-thin-right.svg);
        -webkit-mask-size: cover;
        mask-size: cover;
    }
}

//Recommend
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);
    display: flex;
    align-items: center;


    &__photo {
        box-sizing: content-box; // in order to avoid images shrinking when we apply border.
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -1.5rem;

            @media only screen and (max-width: $bp-medium) {
                margin-right: -2rem;
            }
        }
    }

    &__count {
        margin-right: auto;
    }

    &__friends {
        @media only screen and (max-width: $bp-large) {
            display: flex ;        
        }
    }

}

//Reviews
.review {

    background-color: #fff;
    padding: 3rem;
    margin-bottom: 3.5rem;
    box-shadow: var(--shadow-light);
    position: relative; // as we have defined position: absolute for one of its child(for before pseudo class we have used absolute positioning)
    overflow: hidden;

    @media only screen and (max-width: $bp-large) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
    }

    &__user {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.5rem;
        font-weight: 300;
    }

    &__user-box {
        margin-right: auto;
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 800;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        text-transform: uppercase;
    }

    &::before {
        content: "\201c";  // 201c is the iso code for left double auote symbol
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        color: var(--color-grey-light-2);
        font-size: 20rem;
        font-family: sans-serif;
        z-index: 1;
    }
}

// call to actoion (cta)
.cta {
    text-align: center;
    padding: 3.5rem 0;

    @media only screen and (max-width: $bp-large) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;

        @media only screen and (max-width: $bp-large) {
            font-size: 1.5rem;
            font-weight: 200;
            margin-bottom: 2rem;
        }
    }
} 

.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border: none;
    border-radius: 100px;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative;
    overflow: hidden; // for hiding invisible text which is overflowing out of btn
    cursor: pointer;

    & > * {
        display: inline-block;
        height: 100%;
        width: 100%; 
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem;
    }

    &__invisible {
        position: absolute;
        top: -100%;
        left: 0;
        padding: 2rem 0;    
    }

    &:hover {
        background-image: linear-gradient(to right, var(--color-primary-dark), var(--color-primary-light));
    }

    &:hover &__visible {
        transform: translateY(100%);
    }

    &:hover &__invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;

    }
}